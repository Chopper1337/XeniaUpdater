using System;
using System.Diagnostics;
using System.IO;
using System.IO.Compression;
using System.Net;
using System.Windows.Forms;

namespace XeniaUpdater_C
{
    class Helper
    {
        //Gets the current name of the executable, for the chance that it could be renamed
        string currentExecutableFullPathName = System.Diagnostics.Process.GetCurrentProcess().MainModule.FileName;
        string currentExecutableName = System.Diagnostics.Process.GetCurrentProcess().MainModule.ModuleName;

        public Helper()
        {

        }

        //Creates the folders needed for a given Xenia build
        public void CreateFolders(string folderName)
        {
            try
            {
                Directory.CreateDirectory(folderName);
                Directory.CreateDirectory($"{folderName}/LastUpdate");
            }
            catch (Exception e)
            {
                LogError(e.ToString());
            }
        }

        public void OpenInstallFolder()
        {
            Process.Start(currentExecutableFullPathName.Replace(currentExecutableName, ""));
        }

        //Extracts the zip
        public void ExtractBuild(string folderName, string zipName)
        {
            //Deletes LICENSE file because it isn't needed and also causes issues for some reason
            try
            {
                File.Delete($"{folderName}/LICENSE");
                ZipFile.ExtractToDirectory($"{folderName}/{zipName}", folderName);
                File.Delete($"{folderName}/LICENSE");

            }
            catch (Exception e)
            {
                LogError(e.ToString());
            }
        }

        void LogError(string e)
        {
            //FileStream fs = new FileStream("XeniaUpdaterLog.txt",FileMode.OpenOrCreate);
            StreamWriter sw = new StreamWriter("XeniaUpdaterLog.txt");
            sw.WriteLine(e.ToString());
            sw.Close();
            //fs.Close();
        }

        //Cleanup tasks to do before download and extraction of a new version
        public void PreUpdateTask(string folderName, string zipName, string ExecutableName)
        {
            string PDBName = ExecutableName.Remove(ExecutableName.Length - 4) + ".pdb";
            try
            {
                File.Delete($"{folderName}/LastUpdate/{zipName}");
                File.Move($"{folderName}/{zipName}", $"{folderName}/LastUpdate/{zipName}");
                File.Delete($"{folderName}/{ExecutableName}");
                File.Delete($"{folderName}/LICENSE");
                File.Delete($"{folderName}/xenia.log");
                File.Delete($"{folderName}/{ExecutableName}");
                File.Delete($"{folderName}/{PDBName}");
                File.Delete($"{folderName}/{PDBName}");
            }
            catch (Exception e)
            {
                LogError(e.ToString());
            }
        }

        //Start Xenia, check if keep open button is checked
        public void StartProcess(string ExecutableName, string ExeLocation, bool boxTicked)
        {
            try
            {
                Process.Start($"{ExeLocation}\\{ExecutableName}");
            }
            catch (Exception e)
            {
                MessageBox.Show($"\"{ExecutableName}.exe\" could not be started.\nThe file must be present and executable.", "Error");
                LogError(e.ToString());
            }
            if (!boxTicked)
            {
                Form1 f1 = new Form1();
                f1.Close();
            }
        }

        //Updates XeniaUpdater
        public void UpdateXeniaUpdater()
        {
            WebClient wc = new WebClient();
            wc.DownloadFileAsync(new Uri("https://raw.githubusercontent.com/Chopper1337/XeniaUpdater/Rewrite/bin/Debug/XeniaUpdater.exe"), "XeniaUpdater.Latest.exe");

            if (File.Exists($"XeniaUpdater.Latest.exe"))
            {
                MessageBox.Show($"Latest version downloaded, please restart!", "Latest version downloaded :)");

                using (FileStream strm = File.Create("UpdateDownloaded.bat"))
                using (StreamWriter sw = new StreamWriter(strm))
                {
                    sw.WriteLine(
                        "@echo off\n" +
                        $"rem File generated by {currentExecutableName} (XeniaUpdater), do not modify or delete :)\n" +
                        "title Updating Xenia Updater\n" +
                        $"echo Killing {currentExecutableName}\n" +
                        $"taskkill /im {currentExecutableName}\n" +
                        "timeout 2\n" +
                        $"echo Deleting {currentExecutableName}\n" +
                        $"del \"{currentExecutableFullPathName}\"\n" +
                        $"move XeniaUpdater.Latest.exe \"{currentExecutableFullPathName}\"\n" +
                        $"echo XeniaUpdater has been updated under the name {currentExecutableName}.\necho This CMD window will not appear on next start and can be closed :)\n" +
                        $"{currentExecutableName}\n" +
                        "del UpdateDownloaded.bat");
                }
            }
        }

        //Things to do upon launch of the program
        public void StartupTasks()
        {
            //Booleans to check for the existance of the update batch file, a newly downloaded version of the updater from GitHub and a safety switch to prevent infinte cmd.exe's being started
            bool updateBatExists = File.Exists("UpdateDownloaded.bat");
            bool updateEXEExists = File.Exists("XeniaUpdater.Latest.exe");
            bool safetySwitch = true;

            if (safetySwitch)
            {
                //If the batch file exists and the new executable exists, start the batch file
                if (updateBatExists && updateEXEExists)
                {
                    Process.Start("UpdateDownloaded.bat");
                    safetySwitch = false;
                }
                //Else, if the batch file does not exist but the updated executable does, delete the executable.
                //Reason behind this being that this executable is useless without the batch file.
                else if (!updateBatExists && updateEXEExists)
                {
                    File.Delete("XeniaUpdater.Latest.exe");
                }
                else if (updateBatExists && !updateEXEExists)
                {
                    File.Delete("UpdateDownloaded.bat");
                }

            }

        }
    }
}
